"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[869],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>c});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=u(a),c=i,h=d["".concat(s,".").concat(c)]||d[c]||p[c]||r;return a?n.createElement(h,l(l({ref:t},m),{},{components:a})):n.createElement(h,l({ref:t},m))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3853:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var n=a(7462),i=(a(7294),a(3905));const r={title:"Streamlit Web UI Interface"},l=void 0,o={unversionedId:"streamlit-interface",id:"streamlit-interface",title:"Streamlit Web UI Interface",description:"\x3c!--",source:"@site/docs/4.streamlit-interface.md",sourceDirName:".",slug:"/streamlit-interface",permalink:"/sygil-webui/docs/streamlit-interface",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/4.streamlit-interface.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Streamlit Web UI Interface"},sidebar:"tutorialSidebar",previous:{title:"Running Stable Diffusion WebUI Using Docker",permalink:"/sygil-webui/docs/docker-guide"},next:{title:"Gradio Web UI Interface",permalink:"/sygil-webui/docs/gradio-interface"}},s={},u=[{value:"Launching The Streamlit Web UI",id:"launching-the-streamlit-web-ui",level:3},{value:"Text2Image",id:"text2image",level:2},{value:"Image2Image",id:"image2image",level:2},{value:"Text2Video",id:"text2video",level:2},{value:"SD Concepts Library",id:"sd-concepts-library",level:2},{value:"Textual Inversion",id:"textual-inversion",level:2},{value:"Model Manager",id:"model-manager",level:2},{value:"Settings",id:"settings",level:2}],m={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Features:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Clean UI with an easy to use design, with support for widescreen displays."),(0,i.kt)("li",{parentName:"ul"},"Dynamic live preview of your generations"),(0,i.kt)("li",{parentName:"ul"},"Easily customizable presets right from the WebUI (Coming Soon!)"),(0,i.kt)("li",{parentName:"ul"},"An integrated gallery to show the generations for a prompt or session (Coming soon!)"),(0,i.kt)("li",{parentName:"ul"},"Better optimization VRAM usage optimization, less errors for bigger generations."),(0,i.kt)("li",{parentName:"ul"},"Text2Video - Generate video clips from text prompts right from the WEb UI (WIP)"),(0,i.kt)("li",{parentName:"ul"},"Concepts Library - Run custom embeddings others have made via textual inversion."),(0,i.kt)("li",{parentName:"ul"},"Actively being developed with new features being added and planned - Stay Tuned!"),(0,i.kt)("li",{parentName:"ul"},"Streamlit is now the new primary UI for the project moving forward."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Currently in active development and still missing some of the features present in the Gradio Interface."))),(0,i.kt)("h3",{id:"launching-the-streamlit-web-ui"},"Launching The Streamlit Web UI"),(0,i.kt)("p",null,"To launch the Streamlit Web UI, you will need to do the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Windows:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Open your command line in the repo folder and run the ",(0,i.kt)("inlineCode",{parentName:"li"},"webui_streamlit.cmd")," file."))),(0,i.kt)("li",{parentName:"ul"},"Linux:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Open your terminal to the repo folder and run ",(0,i.kt)("inlineCode",{parentName:"li"},"webui.sh"),", then press ",(0,i.kt)("inlineCode",{parentName:"li"},"1")," when prompted."))),(0,i.kt)("li",{parentName:"ul"},"Manually:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Open your terminal to the repo folder."),(0,i.kt)("li",{parentName:"ul"},"Activate the conda environment using ",(0,i.kt)("inlineCode",{parentName:"li"},"conda activate ldm")),(0,i.kt)("li",{parentName:"ul"},"Run the command ",(0,i.kt)("inlineCode",{parentName:"li"},"python -m streamlit run scripts/webui_streamlit.py"))))),(0,i.kt)("p",null,"Once the Streamlit Web UI launches, a new browser tab will open with the interface. A link will also appear in your terminal to allow you to copy and paste it as needed."),(0,i.kt)("h2",{id:"text2image"},"Text2Image"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(2847).Z,width:"1823",height:"1474"})),(0,i.kt)("p",null,"Streamlit Text2Image allows for a modern, but well known, Stable Diffusion Textual Image generation experience. Here is a quick description of some of the features of Text2Image and what they do:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Width and Height: Control the size of the generated image (Default is 512px)"),(0,i.kt)("li",{parentName:"ul"},"Classifer Free Guidance (CFG): How closely the final image should follow your prompt (Default is 7.5)"),(0,i.kt)("li",{parentName:"ul"},"Seed: The number (or word) used to generate an image with"),(0,i.kt)("li",{parentName:"ul"},"Images Per Batch: The number of images to generate consecutively (Does not affect VRAM)"),(0,i.kt)("li",{parentName:"ul"},"Number of Batches: How many images to generate at once (Very VRAM Intensive)"),(0,i.kt)("li",{parentName:"ul"},"Sampling Steps: The quality of the final output, higher is better with dimiishing returns (Default is 30)"),(0,i.kt)("li",{parentName:"ul"},"Sampling Method: Which sampler to use to generate the image (Default is ",(0,i.kt)("inlineCode",{parentName:"li"},"k_euler"),")")),(0,i.kt)("h2",{id:"image2image"},"Image2Image"),(0,i.kt)("p",null,"--"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(5100).Z,width:"1823",height:"1474"})),(0,i.kt)("p",null,"Streamlit Image2Image allows for you to take an image, be it generated by Stable Diffusion or otherwise, and use it as a base for another geenration. This has the potential to really enhance images and fix issues with initial Text2Image generations. It also includes some built-in drawing and masking tools to help create custom generations. Some notable features of Gradio Image2Image are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Image Editor Mode: Choose whether you wish to mask, crop, or uncrop the image"),(0,i.kt)("li",{parentName:"ul"},"Mask Mode: Allows you to decide if a drawn mask should be generated or kept"),(0,i.kt)("li",{parentName:"ul"},"Denoising Strength: How much of the generated image should replace the original image. (default is 75%)"),(0,i.kt)("li",{parentName:"ul"},"Width and Height: Control the size of the generated image (Default is 512px)"),(0,i.kt)("li",{parentName:"ul"},"Classifier Free Guidance (CFG): How closely the final image should follow your prompt (Default is 7.5)"),(0,i.kt)("li",{parentName:"ul"},"Seed: The number (or word) used to generate an image with"),(0,i.kt)("li",{parentName:"ul"},"Images Per Batch: The number of images to generate consecutively (Does not affect VRAM)"),(0,i.kt)("li",{parentName:"ul"},"Number of Batches: How many images to generate at once (Very VRAM Intensive)"),(0,i.kt)("li",{parentName:"ul"},"Sampling Steps: The quality of the final output, higher is better (Default is 30)"),(0,i.kt)("li",{parentName:"ul"},"Sampling Method: Which sampler to use to generate the image (Default is ",(0,i.kt)("inlineCode",{parentName:"li"},"k_euler"),")")),(0,i.kt)("h2",{id:"text2video"},"Text2Video"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(4659).Z,width:"1799",height:"931"})),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Insert details of how to use T2V here"),"\n(ZeroCool needs to fill in details here of how Text2Video works)"),(0,i.kt)("h2",{id:"sd-concepts-library"},"SD Concepts Library"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(4499).Z,width:"1842",height:"1986"})),(0,i.kt)("p",null,"The Concept Library allows for the easy usage of custom textual inversion models. These models may be loaded into ",(0,i.kt)("inlineCode",{parentName:"p"},"models/custom/sd-concepts-library")," and will appear in the Concepts Library in Streamlit. To use one of these custom models in a prompt, either copy it using the button on the model, or type ",(0,i.kt)("inlineCode",{parentName:"p"},"<model-name>")," in the prompt where you wish to use it."),(0,i.kt)("p",null,"Please see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Sygil-Dev/sygil-webui/blob/master/docs/7.concepts-library.md"},"Concepts Library")," section to learn more about how to use these tools."),(0,i.kt)("h2",{id:"textual-inversion"},"Textual Inversion"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"TBD"),(0,i.kt)("h2",{id:"model-manager"},"Model Manager"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"TBD"),(0,i.kt)("h2",{id:"settings"},"Settings"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This section of the Web UI is still in development")),(0,i.kt)("p",null,"This area allows you to customize how you want Streamlit to run. These changes will be saved to ",(0,i.kt)("inlineCode",{parentName:"p"},"configs/webui/userconfig_streamlit.yaml"),"."))}p.isMDXComponent=!0},4499:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/streamlit-concepts-7e3ba6c8a4eb22f699385bf1ee436952.png"},5100:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/streamlit-i2i-7f852e4362c181d0d5bbe674d1d4b586.png"},2847:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/streamlit-t2i-de3507101ca2060d1b7b5d4070686e34.png"},4659:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/streamlit-t2v-ead89cdc34f5c5d057115400a7e7d164.png"}}]);